/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package quotes;

import com.google.gson.Gson;
import com.google.gson.JsonArray;
import com.google.gson.JsonObject;

import java.io.*;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.Random;

public class App {
    static String filePath = "src/main/resources/recentquotes.json";

    public static void main(String[] args){
       System.out.println(convertToQuoteClassFromApi(getQuoteFromApi("http://swquotesapi.digitaljedi.dk/api/SWQuote/RandomStarWarsQuote")));
    }

    //method to get a random quote from the star wars api
    public static BufferedReader getQuoteFromApi(String urlString){
        try {
            URL url = new URL(urlString);
            HttpURLConnection con = (HttpURLConnection) url.openConnection();
            BufferedReader reader = new BufferedReader(new InputStreamReader((con.getInputStream())));
            return reader;
        }catch(IOException e){
            System.out.println(generateRandomQuote(convertToQuoteClassFromFile(readFile(filePath))));
            return null;
        }
    }

    //method to convert an api quote to the quote class using gson
    public static Quotes convertToQuoteClassFromApi(BufferedReader jsonReader){
        if(jsonReader != null){
            Gson gson = new Gson();
            Quotes quote = gson.fromJson(jsonReader, Quotes.class);
            cacheQuoteIntoFile(quote);
            return quote;
        }else{
            return null;
        }
    }

    //method to cache the random quotes i get back from the api into my json file
    public static void cacheQuoteIntoFile(Quotes quote){
        try {
            Gson gson = new Gson();
            JsonArray jsonFileArray = gson.fromJson(readFile(filePath), JsonArray.class);
            JsonObject quoteObject = new JsonObject();
            quoteObject.addProperty("text", quote.getStarWarsQuote());
            jsonFileArray.add(quoteObject);
            FileWriter writer = new FileWriter(filePath);
            gson.toJson(jsonFileArray, writer);
            writer.close();

        } catch (Exception e) {
            System.out.println("Hmm.. Got an error while saving Company data to file " + e.toString());
        }
    }

//function to read a file from a file path using a buffered reader
    public static BufferedReader readFile(String path){
        try {
        BufferedReader reader = new BufferedReader(new FileReader(path));
        return reader;
    } catch (Exception e){
        System.out.println(("File not found"));
        System.out.println(e);
        return null;
    }
}

    //function to convert a buffered reader into an array of quote instances
    public static Quotes[] convertToQuoteClassFromFile(BufferedReader jsonReader){
        Gson gson = new Gson();
        Quotes[] quotesArr = gson.fromJson(jsonReader, Quotes[].class);
        return quotesArr;
    }

    //function to generate a random quote from the list of quote instances in the array
    public static Quotes generateRandomQuote(Quotes[] quote){
        Random rand = new Random();
        int randomNum = rand.nextInt(quote.length);
        return quote[randomNum];
    }
}
